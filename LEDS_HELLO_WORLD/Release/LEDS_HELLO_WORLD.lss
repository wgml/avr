
LEDS_HELLO_WORLD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000124  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000124  00000198  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000054  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  000008b8  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 57 00 	call	0xae	; 0xae <main>
  64:	0c 94 90 00 	jmp	0x120	; 0x120 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <checkIter>:
  6c:	cc 99       	sbic	0x19, 4	; 25
  6e:	0c c0       	rjmp	.+24     	; 0x88 <checkIter+0x1c>
  70:	8b e4       	ldi	r24, 0x4B	; 75
  72:	9d e1       	ldi	r25, 0x1D	; 29
  74:	01 97       	sbiw	r24, 0x01	; 1
  76:	f1 f7       	brne	.-4      	; 0x74 <checkIter+0x8>
  78:	00 c0       	rjmp	.+0      	; 0x7a <checkIter+0xe>
  7a:	00 00       	nop
  7c:	89 b3       	in	r24, 0x19	; 25
  7e:	82 95       	swap	r24
  80:	81 70       	andi	r24, 0x01	; 1
  82:	91 e0       	ldi	r25, 0x01	; 1
  84:	89 27       	eor	r24, r25
  86:	08 95       	ret
  88:	80 e0       	ldi	r24, 0x00	; 0
  8a:	08 95       	ret

0000008c <checkSwitch>:
  8c:	cd 99       	sbic	0x19, 5	; 25
  8e:	0d c0       	rjmp	.+26     	; 0xaa <checkSwitch+0x1e>
  90:	8b e4       	ldi	r24, 0x4B	; 75
  92:	9d e1       	ldi	r25, 0x1D	; 29
  94:	01 97       	sbiw	r24, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <checkSwitch+0x8>
  98:	00 c0       	rjmp	.+0      	; 0x9a <checkSwitch+0xe>
  9a:	00 00       	nop
  9c:	89 b3       	in	r24, 0x19	; 25
  9e:	85 fb       	bst	r24, 5
  a0:	88 27       	eor	r24, r24
  a2:	80 f9       	bld	r24, 0
  a4:	91 e0       	ldi	r25, 0x01	; 1
  a6:	89 27       	eor	r24, r25
  a8:	08 95       	ret
  aa:	80 e0       	ldi	r24, 0x00	; 0
  ac:	08 95       	ret

000000ae <main>:
  ae:	8a b3       	in	r24, 0x1a	; 26
  b0:	8e 60       	ori	r24, 0x0E	; 14
  b2:	8a bb       	out	0x1a, r24	; 26
  b4:	8b b3       	in	r24, 0x1b	; 27
  b6:	80 63       	ori	r24, 0x30	; 48
  b8:	8b bb       	out	0x1b, r24	; 27
  ba:	c0 e0       	ldi	r28, 0x00	; 0
  bc:	01 e0       	ldi	r16, 0x01	; 1
  be:	10 e0       	ldi	r17, 0x00	; 0
  c0:	d3 e0       	ldi	r29, 0x03	; 3
  c2:	8e e0       	ldi	r24, 0x0E	; 14
  c4:	f8 2e       	mov	r15, r24
  c6:	0e 94 36 00 	call	0x6c	; 0x6c <checkIter>
  ca:	88 23       	and	r24, r24
  cc:	79 f0       	breq	.+30     	; 0xec <main+0x3e>
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	8c 0f       	add	r24, r28
  d2:	9b b3       	in	r25, 0x1b	; 27
  d4:	98 01       	movw	r18, r16
  d6:	08 2e       	mov	r0, r24
  d8:	01 c0       	rjmp	.+2      	; 0xdc <main+0x2e>
  da:	22 0f       	add	r18, r18
  dc:	0a 94       	dec	r0
  de:	ea f7       	brpl	.-6      	; 0xda <main+0x2c>
  e0:	29 27       	eor	r18, r25
  e2:	2b bb       	out	0x1b, r18	; 27
  e4:	6d 2f       	mov	r22, r29
  e6:	0e 94 84 00 	call	0x108	; 0x108 <__udivmodqi4>
  ea:	c9 2f       	mov	r28, r25
  ec:	0e 94 46 00 	call	0x8c	; 0x8c <checkSwitch>
  f0:	88 23       	and	r24, r24
  f2:	19 f0       	breq	.+6      	; 0xfa <main+0x4c>
  f4:	8b b3       	in	r24, 0x1b	; 27
  f6:	8f 25       	eor	r24, r15
  f8:	8b bb       	out	0x1b, r24	; 27
  fa:	87 ea       	ldi	r24, 0xA7	; 167
  fc:	91 e6       	ldi	r25, 0x61	; 97
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x50>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x56>
 104:	00 00       	nop
 106:	df cf       	rjmp	.-66     	; 0xc6 <main+0x18>

00000108 <__udivmodqi4>:
 108:	99 1b       	sub	r25, r25
 10a:	79 e0       	ldi	r23, 0x09	; 9
 10c:	04 c0       	rjmp	.+8      	; 0x116 <__udivmodqi4_ep>

0000010e <__udivmodqi4_loop>:
 10e:	99 1f       	adc	r25, r25
 110:	96 17       	cp	r25, r22
 112:	08 f0       	brcs	.+2      	; 0x116 <__udivmodqi4_ep>
 114:	96 1b       	sub	r25, r22

00000116 <__udivmodqi4_ep>:
 116:	88 1f       	adc	r24, r24
 118:	7a 95       	dec	r23
 11a:	c9 f7       	brne	.-14     	; 0x10e <__udivmodqi4_loop>
 11c:	80 95       	com	r24
 11e:	08 95       	ret

00000120 <_exit>:
 120:	f8 94       	cli

00000122 <__stop_program>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <__stop_program>
